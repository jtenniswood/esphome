substitutions:
  SCREEN_MAIN: master


number:
  - platform: template
    id: screen_brightness
    name: Screen Brightness
    min_value: 0
    max_value: 100
    step: 5
    initial_value: 100
    restore_value: true
    set_action:
      - lambda: |-
          if (!id(deck).get_inactivity())
            id(device).set_brightness(x);

  - platform: template
    id: inactive_screen_brightness
    name: Screen Inactive
    min_value: 0
    max_value: 100
    step: 5
    initial_value: 20
    restore_value: true
    set_action:
      - lambda: |-
          if (id(deck).get_inactivity())
            id(device).set_brightness(x);


sensor:
# Temperature Sensor
  - platform: homeassistant
    id: outdoor_temperature_sensor
    entity_id: sensor.outdoor_temperature

# Office Air Conditioner Mode
text_sensor:
  - platform: homeassistant
    id: office_air_conditioner_mode
    entity_id: climate.office_air_conditioner
    internal: true



binary_sensor:

  # Office Feature Lights
  - platform: homeassistant
    id: office_feature_lights
    entity_id: light.office_feature_lights

  # Office Storage Lights
  - platform: homeassistant
    id: office_storage
    entity_id: light.office_storage

  # 3d Printer
  - platform: homeassistant
    id: printer_power
    entity_id: switch.office_3d_printer_power
    
  # Office Air Conditioner
  - platform: template
    id: office_air_conditioner
    lambda: |-
      std::string state = id(office_air_conditioner_mode).state;
      if (state == "auto") {
        return {"on"};
      } else if (state == "off") {
        return {"off"};
      } else {
        return {state};
      }







ha_deck:
  id: deck
  main_screen: ${SCREEN_MAIN}
  inactivity:
    period: 600 # seconds
    blank_screen: true
  on_inactivity_change:
    lambda:  |-
      if (x) {
        id(device).set_brightness(id(inactive_screen_brightness).state);
      } else {
        id(device).set_brightness(id(screen_brightness).state);
      }


  screens:
    - name: ${SCREEN_MAIN}
      widgets:

        # Time
        - type: value-card
          id: local_time
          position: 8, 8
          dimensions: 228x96
          visible: |-
            return true;
            
        # Storage Light
        - type: button
          position: 8, 112
          text: Storage
          icon: 󰝩
          toggle: true
          enabled: return true;
          checked: |-
            return id(office_storage).state;
          on_turn_on:
            - homeassistant.service:
                service: light.turn_on
                data:
                  entity_id: light.office_storage
          on_turn_off:
            - homeassistant.service:
                service: light.turn_off
                data:
                  entity_id: light.office_storage

        # Printer Power
        - type: button
          position: 244, 112
          text: Printer
          icon: 󰝩
          toggle: true
          enabled: return true;
          checked: |-
            return id(printer_power).state;
          on_turn_on:
            - homeassistant.service:
                service: switch.turn_on
                data:
                  entity_id: switch.office_3d_printer_power
          on_turn_off:
            - homeassistant.service:
                service: switch.turn_off
                data:
                  entity_id: switch.office_3d_printer_power

        # Office Aircon
        - type: button
          position: 362, 112
          text: Aircon
          icon: 󰈐
          toggle: true
          enabled: return true;
          checked: |-
            return id(office_air_conditioner).state;
          on_turn_on:
            - homeassistant.service:
                service: climate.set_hvac_mode
                data:
                  entity_id: climate.office_air_conditioner
                  hvac_mode: "auto"
          on_turn_off:
            - homeassistant.service:
                service: climate.set_hvac_mode
                data:
                  entity_id: climate.office_air_conditioner
                  hvac_mode: "off"

        # Temperature
        - type: value-card
          id: outdoor_temperature
          position: 126, 112
          text: Outside
          icon: 󰔏
          unit: °C
          enabled: return true;
          value: |-
            char buff[10] = "-";
            sprintf(buff, "%.1f", id(outdoor_temperature_sensor).state);
            return std::string(buff);


        # Feature Lighting
        - type: button
          position: 8, 216
          text: Feature
          icon: 󰝩
          toggle: true
          enabled: return true;
          checked: |-
            return id(office_feature_lights).state;
          on_turn_on:
            - homeassistant.service:
                service: light.turn_on
                data:
                  entity_id: light.office_feature_lights
          on_turn_off:
            - homeassistant.service:
                service: light.turn_off
                data:
                  entity_id: light.office_feature_lights
