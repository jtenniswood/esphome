# Online Status
binary_sensor:
  - platform: status
    name: "Online"
    id: ink_ha_connected
    icon: mdi:check-network


sensor:
# Uptime
  - platform: uptime
    name: "Uptime Sensor"
    id: uptime_sensor
    entity_category: diagnostic
    internal: true

# Wifi Signal Strength
  - platform: wifi_signal
    name: "Wifi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"
    internal: true

# Wifi Signal Strength
  - platform: copy
    source_id: wifi_signal_db
    name: "Wifi Strength"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    icon: mdi:wifi
    entity_category: "diagnostic"
    device_class: ""


text_sensor:
# Ip Address
  - platform: wifi_info
    ip_address:
      name: IP Address
      icon: mdi:ip-network

# Uptime
  - platform: template
    name: "Uptime"
    id: uptimes
    icon: mdi:update
    entity_category: diagnostic
    lambda: |-
      int seconds = (id(uptime_sensor).state);
      int days = seconds / (24 * 3600);
      seconds = seconds % (24 * 3600);
      int hours = seconds / 3600;
      seconds = seconds % 3600;
      int minutes = seconds /  60;
      seconds = seconds % 60;
      if ( days > 3650 ) {
        return { "Starting up" };
      } else if ( days ) {
        return { (String(days) +"d " + String(hours) +"h " + String(minutes) +"m "+ String(seconds) +"s").c_str() };
      } else if ( hours ) {
        return { (String(hours) +"h " + String(minutes) +"m "+ String(seconds) +"s").c_str() };
      } else if ( minutes ) {
        return { (String(minutes) +"m "+ String(seconds) +"s").c_str() };
      } else {
        return { (String(seconds) +"s").c_str() };
      }

# Esphome Version
  - platform: version
    name: Version
    icon: mdi:package-variant-closed
    hide_timestamp: true
