# LD2412 Presense Sensor
uart:
  id: uart_1
  rx_pin: GPIO${rx_pin}
  tx_pin: GPIO${tx_pin}
  baud_rate: 115200
  parity: NONE


# Sensor Library
esphome:
  includes:
    - library/ld2412.h


# Presense Sensor
custom_component:
  - lambda: |-
      return {new LD2412(id(uart_1))};
    components:
      - id: ld2412


binary_sensor:
# Presense Sensor
  - platform: custom
    lambda: |-
      auto uart_component = static_cast<LD2412 *>(ld2412);
      return {uart_component->hasTarget,uart_component->hasMovingTarget,uart_component->hasStillTarget};
    binary_sensors:
      - name: "Presence"
        icon: mdi:account
      - name: "Moving Target"
        icon: mdi:motion-sensor
      - name: "Still Target"
        icon: mdi:motion-sensor


sensor: 
# Presense Sensor
  - platform: custom
    lambda: |-
      auto uart_component = static_cast<LD2412 *>(ld2412);
      return {uart_component->movingTargetDistance,uart_component->movingTargetEnergy,uart_component->stillTargetDistance,uart_component->stillTargetEnergy};
    sensors:
      - name: "Moving Distance"
        unit_of_measurement: "cm"
        accuracy_decimals: 0
        icon: mdi:signal-distance-variant
      - name: "Moving Energy"
        unit_of_measurement: "%"
        accuracy_decimals: 0
        icon: mdi:motion-sensor
      - name: "Still Distance"
        unit_of_measurement: "cm"
        accuracy_decimals: 0
        icon: mdi:signal-distance-variant
      - name: "Still Energy"
        unit_of_measurement: "%"
        accuracy_decimals: 0
        icon: mdi:flash


# Presense Sensor 
button: 
  - platform: template
    name: "Reboot sensor"
    on_press:
      lambda: 'static_cast<LD2412 *>(ld2412)->reboot();'


number:
# Zone 1
  - platform: template
    name: "Zone 1 End (${zone1})"
    id: presence_z1_end
    device_class: distance
    min_value: 0
    max_value: 600
    step: 1
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: ${zone1_distance}
    icon: "mdi:arrow-collapse-right"
    entity_category: CONFIG

  # Zone 2
  - platform: template
    name: "Zone 2 End (${zone2})"
    id: presence_z2_end
    device_class: distance
    min_value: 0
    max_value: 600
    step: 1
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: ${zone2_distance}
    icon: "mdi:arrow-collapse-right"
    entity_category: CONFIG

binary_sensor:
  ## Presence zones
  - platform: template
    name: "${zone1} Occupancy"
    device_class: occupancy
    icon: mdi:motion-sensor
    lambda: |-
      if ((id(has_target).state) && (id(detection_distance).state < id(presence_z1_end).state)) {
        return true;
      } else {
        return false;
      }
  - platform: template
    name: "${zone2} Occupancy"
    device_class: occupancy
    icon: mdi:motion-sensor
    lambda: |-
      if ((id(has_target).state) && ((id(presence_z1_end).state < id(detection_distance).state) && (id(detection_distance).state < id(presence_z2_end).state))) {
        return true;
      } else {
        return false;
      }
