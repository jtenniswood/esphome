# Designed for M5AtomS3
esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino

# Esphome
esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  area: ${room}

# Enable logging
logger:

# Bluetooth Tracker
esp32_ble_tracker:
  scan_parameters:
    interval: 1100ms
    window: 1100ms

#Bluetooth Proxy
bluetooth_proxy:
  active: true

# Online Status
binary_sensor:
  - platform: status
    name: "Online"
    id: ink_ha_connected

sensor:
# Uptime Sensor
  - platform: uptime
    name: "Uptime Sensor"
    id: uptime_sensor
    entity_category: diagnostic
    internal: true
    
# Illuminance Sensor
  - platform: bh1750
    name: "Sensor"
    address: 0x23
    update_interval: 1s

# Wifi Signal Strength
  - platform: wifi_signal
    name: "Wifi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"
    internal: true

# Wifi Signal Strength
  - platform: copy
    source_id: wifi_signal_db
    name: "Wifi Strength"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"
    device_class: ""

text_sensor:
# Ip Address
  - platform: wifi_info
    ip_address:
      name: IP Address

# Uptime Sensor
  - platform: template
    name: "Uptime"
    id: uptimes
    icon: mdi:clock-start
    entity_category: diagnostic
    lambda: |-
      int seconds = (id(uptime_sensor).state);
      int days = seconds / (24 * 3600);
      seconds = seconds % (24 * 3600);
      int hours = seconds / 3600;
      seconds = seconds % 3600;
      int minutes = seconds /  60;
      seconds = seconds % 60;
      if ( days > 3650 ) {
        return { "Starting up" };
      } else if ( days ) {
        return { (String(days) +"d " + String(hours) +"h " + String(minutes) +"m "+ String(seconds) +"s").c_str() };
      } else if ( hours ) {
        return { (String(hours) +"h " + String(minutes) +"m "+ String(seconds) +"s").c_str() };
      } else if ( minutes ) {
        return { (String(minutes) +"m "+ String(seconds) +"s").c_str() };
      } else {
        return { (String(seconds) +"s").c_str() };
      }

#Dashboard
web_server:
  port: 80
  version: 3

# Data Bus
i2c:
  - id: bus_a
    sda: 2
    scl: 1
    scan: true
